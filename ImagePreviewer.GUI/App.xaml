<Application x:Class="ImagePreviewer.GUI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="clr-namespace:DesktopCore.Data;assembly=DesktopCore"
             xmlns:l="clr-namespace:ImagePreviewer"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <d:IntToVisibilityConverter x:Key="intToVisibility" />
        <d:IntToBoolConverter x:Key="intToBool" />
        <d:NullToVisibilityConverter x:Key="nullToVisibility" />
        <d:InversedBoolToVisibilityConverter x:Key="inversedBoolToVisibility" />
        <l:BoolToPositionConverter x:Key="boolToDock" />
        <BooleanToVisibilityConverter x:Key="boolToVisibility" />
        
        <ScaleTransform x:Key="st" ScaleX="3" ScaleY="3"/>
        <LinearGradientBrush x:Key="shinyBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="White"/>
            <GradientStop Offset="0.5" Color="#EEF5FC"/>
            <GradientStop Offset="0.5" Color="#E7EEF8"/>
            <GradientStop Offset="0.5" Color="#CDDAEA"/>
            <GradientStop Offset="0.95" Color="#E7EEF8"/>
            <GradientStop Offset="0.95" Color="#CDDAEA"/>
            <GradientStop Offset="1" Color="#A0AFC3"/>
        </LinearGradientBrush>
        
        <Style x:Key="border" TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Background" Value="White" />
            <Setter Property="CornerRadius" Value="5" />
            <Setter Property="Margin" Value="5" />
        </Style>
        <Style x:Key="popup" TargetType="{x:Type Border}" BasedOn="{StaticResource border}">
            <Setter Property="Background" Value="#eeeeee" />
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="0" Opacity=".7" Direction="0" BlurRadius="20" />
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Expander}">
            <Setter Property="Background" Value="White" />
            <Setter Property="Margin" Value="5,10,5,5" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="Gray" />
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Padding" Value="4,2" />
        </Style>
        <Style x:Key="link" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="Blue" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border VerticalAlignment="Center" HorizontalAlignment="Center" BorderThickness="0,0,0,1" BorderBrush="{TemplateBinding Button.Foreground}" Padding="{TemplateBinding Button.Padding}" Margin="{TemplateBinding Button.Margin}">
                            <TextBlock Text="{TemplateBinding Button.Content}" Foreground="{TemplateBinding Button.Foreground}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="plainButton">
            <Setter Property="Button.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <ContentPresenter Content="{TemplateBinding Button.Content}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Button.Cursor" Value="Hand" />
        </Style>
        <Style x:Key="imageButton" BasedOn="{StaticResource plainButton}">
            <Setter Property="Button.Margin" Value="0,4,5,4" />
            <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor" />
            <Style.Triggers>
                <Trigger Property="Button.IsEnabled" Value="false">
                    <Setter Property="Button.Opacity" Value=".5" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>
